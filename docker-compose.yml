services:

  mongodb:
    image: mongo
    container_name: mongodb-capitech
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    healthcheck:
      test: ["CMD-SHELL", "mongo --eval 'db.runCommand({ ping: 1 })'"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - capitech-network
      
  backend:
    # build: ../Capitech-back
    image: capitech-back:latest
    ports:
      - "4000:4000"
    environment:
      - DB_PATH=mongodb://mongodb-capitech:27017/Capitech
      - JWT_SECRET=qJSBO1GY036KAJV4hvtc1Gt0yBQ
      - ADMIN_CODE=Fatec2024Votorantim
    volumes:
      - ./Capitech-back/src:/src/src
      - ./Capitech-back/package.json:/src/package.json
      - /src/node_modules
    command: bash -c "/src/scripts/wait-for-it.sh mongodb-capitech:27017 -t 30 -- ts-node -r dotenv/config src/index.ts"
    depends_on:
      - mongodb
    networks:
      - capitech-network

  frontend:
    # build: 
    #  context: .
    #  dockerfile: Dockerfile
    image: capitech-front:latest
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_SERVICE_ID="service_plrbyoy"
      - NEXT_PUBLIC_TEMPLATE_ID="template_mycbjog"
      - NEXT_PUBLIC_PUBLIC_KEY="BB1sMRYW_bq9hq4fM"
      - NEXTAUTH_URL=http://localhost:3000
      - NEXTAUTH_SECRET=testeeeee
    volumes:
      - ./Capitech-front:/app
    command: npm start
    networks:
      - capitech-network

volumes:
  mongo-data:

networks:
  capitech-network: